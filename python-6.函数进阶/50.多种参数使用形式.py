'''
关键字参数：函数调用时通过"键=值"形式传递参数
作用：可以让函数更清晰，容易使用，同时也清除了参数的顺序需求
关键字参数         可以不按照固定顺序
缺省参数（默认值）  不传参数则使用默认值  设置默认值必须在最后面
不定长参数：不定长参数也叫可变参数，用于不确定调用的时候会传递多少个参数（不传参也可以）的场景
        作用：当调用函数时不确定参数个数时可以使用不定长参数
        类型：
            1.位置传递
            2.关键字传递
        注意：
 位置传递 ：    传递的所有参数都会被args变量收集，它会根据传进参数的位置的位置合并为一个元组（tuple），args是元组类型，这就是位置传递
 关键字传递：    参数是“键=值”形式的形式的情况下，所有的“键=值”都会被kwargs接收，同时会根据“键=值”组成字典
'''
def user_info(name,age,gender):
    print(f"姓名是：{name}，年龄是：{age}，性别是：{gender}")
# 位置参数 - 默认使用形式 传入的顺序和
user_info("小明",20,'男')
# 关键字参数 可以不按照固定顺序
user_info(name="小王",age=11,gender="女")
# 缺省参数（默认值）  不传参数则使用默认值  设置默认值必须在最后面
def user_info(name,age,gender="男"):
    print(f"姓名是：{name}，年龄是：{age}，性别是：{gender}")
user_info("小天",13)
user_info("小天",13,"女")
# 不定长 - 位置不定长，*号
# 不定长定义的形式参数会作为元组存在，接收不定长数量的参数传入
def user_info(*args):
    print(f"aegs参数的类型是：{type(args)},内容是：{args}")
user_info(1,2,3,'小明','男孩')

# 不定长 - 位置不定长，**号
# 数是“键=值”形式的形式的情况下，所有的“键=值”都会被kwargs接收，同时会根据“键=值”组成字典
def user_info(**kwargs):
    print(f"aegs参数的类型是：{type(kwargs)},内容是：{kwargs}")
user_info(name = '小王',age = 11, gender = "男孩",addr = "北京")